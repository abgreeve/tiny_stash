{"version":3,"file":"ui.min.js","sources":["../src/ui.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny stash UI.\n *\n * @module      tiny_stash/ui\n * @copyright   2023 Adrian Greeve <adriangreeve.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Templates from 'core/templates';\nimport {getContextId} from 'editor_tiny/options';\nimport {getCourseId} from 'tiny_stash/options';\nimport $ from 'jquery';\nimport * as DropAdd from 'tiny_stash/drop-add';\nimport * as AddItem from 'tiny_stash/additem';\nimport SnippetMaker from 'tiny_stash/local/classes/snippetmaker';\nimport * as WebService from 'tiny_stash/webservice-calls';\n\nlet itemsData = {};\nlet Snippet = {};\n\n/**\n * Handle action\n * @param {TinyMCE} editor\n */\nexport const handleAction = (editor) => {\n    displayDialogue(editor);\n};\n\n/**\n * Display the drop dialogue.\n *\n * @param {TinyMCE} editor\n * @returns {Promise<void>}\n */\nconst displayDialogue = async(editor) => {\n    let contextid = getContextId(editor);\n    let data = await getDropData(contextid);\n    let courseid = getCourseId(editor);\n    let itemdata = await getItemData(courseid);\n    if (itemdata.items) {\n        itemdata.items.forEach((item) => {\n            itemsData[item.id] = item;\n        });\n    }\n    // window.console.log(data);\n\n    const modalPromises = await ModalFactory.create({\n        title: \"Stash stuff here\",\n        type: ModalFactory.types.SAVE_CANCEL,\n        body: Templates.render('tiny_stash/drop-code-selector', data),\n        large: true,\n    });\n\n    modalPromises.show();\n    const $root = await modalPromises.getRoot();\n    const root = $root[0];\n\n    let savedata = {};\n\n    $root.on(ModalEvents.hidden, () => {\n        modalPromises.destroy();\n    });\n\n    $root.on(ModalEvents.bodyRendered, () => {\n        addAddDropListener(editor);\n\n        // Add a listener for the appearance select box.\n        addAppearanceListener();\n        addTextAndImageListener();\n\n        let additembutton = document.querySelector('.tiny-stash-add-item');\n        additembutton.addEventListener('click', (e) => {\n            e.preventDefault();\n            $('.carousel').carousel('next');\n            $('.carousel').carousel('pause');\n            AddItem.init(editor);\n        });\n\n        $('.carousel').on('slide.bs.carousel', async () => {\n            if (DropAdd.Status == 'Saved') {\n                // window.console.log(DropAdd.SavedIndex);\n                // Reload the drop list.\n                data = await getDropData(contextid);\n                Templates.render('tiny_stash/drop-select', data).then((html, js) => {\n                    let selectnode = document.querySelector('.tiny-stash-drop-select');\n                    Templates.replaceNodeContents(selectnode, html, js);\n                    let selectitemnode = document.querySelector('.tiny-stash-item-select');\n                    for (let i=0; i< selectitemnode.options.length; i++) {\n                        let option = selectitemnode.options[i];\n                        if (option.dataset.hash == DropAdd.SavedIndex) {\n                            option.selected = true;\n                            setPreview(option.dataset.id, option.dataset.hash);\n                        }\n                    }\n                    addAddDropListener(editor);\n                });\n                DropAdd.Status = 'Clear';\n            }\n            if (AddItem.Status == 'Saved') {\n                // Reload the drop list.\n                itemsData = {};\n                itemdata = await getItemData(courseid);\n                itemdata.items.forEach((item) => {\n                    itemsData[item.id] = item;\n                });\n                AddItem.Status = 'Clear';\n            }\n        });\n    });\n\n    $root.on(ModalEvents.save, () => {\n        let activetab = document.querySelector('[aria-selected=\"true\"][data-tiny-stash]');\n        let codearea = '';\n        if (activetab.getAttribute('aria-controls') == 'items') {\n            codearea = document.getElementsByClassName('tiny-stash-item-code');\n        } else {\n            codearea = document.getElementsByClassName('tiny-stash-trade-code');\n        }\n        savedata.codearea = codearea[0].innerText;\n        editor.execCommand('mceInsertContent', false, savedata.codearea);\n    });\n\n    root.addEventListener('click', (event) => {\n        let element = event.target;\n        let elementtype = element.dataset.type;\n        if (element.nodeName === \"OPTION\" && elementtype == 'item') {\n            setPreview(element.dataset.id, element.dataset.hash);\n        }\n        if (element.nodeName === \"OPTION\" && elementtype == 'trade') {\n            let codearea = document.getElementsByClassName('tiny-stash-trade-code');\n            let dropcode = \"[stashtrade secret=\\\"\" + element.dataset.hash + \"\\\"]\";\n            codearea[0].innerText = dropcode;\n        }\n    });\n};\n\nconst addAddDropListener = (editor) => {\n    let temp = document.getElementsByClassName('tiny-stash-add-drop');\n    temp[0].addEventListener('click', (e) => {\n        e.preventDefault();\n        $('.carousel').carousel(2);\n        $('.carousel').carousel('pause');\n        // init drop add page.\n        DropAdd.init(itemsData, editor);\n    });\n};\n\nconst addAppearanceListener = () => {\n    let selectnode = document.querySelector('.tiny-stash-appearance');\n    selectnode.addEventListener('change', (e) => {\n        let selectedelement = e.target.selectedOptions[0];\n        if (selectedelement.value == 'text') {\n            document.querySelector('.snippet-label').classList.remove('d-none');\n            document.querySelector('.snippet-actiontext').classList.add('d-none');\n        }\n        if (selectedelement.value == 'image') {\n            document.querySelector('.snippet-label').classList.add('d-none');\n            document.querySelector('.snippet-actiontext').classList.add('d-none');\n        }\n        if (selectedelement.value == 'imageandbutton') {\n            document.querySelector('.snippet-label').classList.add('d-none');\n            document.querySelector('.snippet-actiontext').classList.remove('d-none');\n        }\n        let itemid = document.querySelector('.tiny-stash-item-select').selectedOptions[0].dataset.id;\n        setPreview(itemid, selectedelement.value);\n    });\n};\n\nconst addTextAndImageListener = () => {\n    let textnode = document.querySelector('input[name=\"actiontext\"]');\n\n    textnode.addEventListener('keyup', (e) => {\n        // if no preview exit early.\n        if (!document.querySelector('.block-stash-item')) {\n            return;\n        }\n        let buttontext = e.currentTarget.value;\n        let previewbutton = document.querySelector('.tiny-stash-button-preview');\n        previewbutton.innerText = buttontext;\n        // Update the snippet text.\n        let codearea = document.getElementsByClassName('tiny-stash-item-code');\n        Snippet.setText(buttontext);\n        codearea[0].innerText = Snippet.getImageAndText();\n    });\n\n    let labelnode = document.querySelector('input[name=\"label\"]');\n\n    labelnode.addEventListener('keyup', () => {\n        // if no preview exit early.\n        if (!document.querySelector('.block-stash-item')) {\n            return;\n        }\n        let itemnode = document.querySelector('.tiny-stash-item-select');\n        setPreview(itemnode.selectedOptions[0].dataset.id, itemnode.selectedOptions[0].dataset.hash);\n        // let buttontext = e.currentTarget.value;\n        // let previewbutton = document.querySelector('.tiny-stash-button-preview');\n        // previewbutton.innerText = buttontext;\n        // // Update the snippet text.\n        // let codearea = document.getElementsByClassName('tiny-stash-item-code');\n        // Snippet.setText(buttontext);\n        // codearea[0].innerText = Snippet.getImageAndText();\n    });\n\n};\n\nconst setPreview = (itemid, hashcode) => {\n    // Check the appearance to determine what to display and update.\n    let appearanceselector = document.querySelector('.tiny-stash-appearance');\n    let codearea = document.getElementsByClassName('tiny-stash-item-code');\n    let buttontext = '';\n    if (appearanceselector.value === 'text') {\n        buttontext = document.querySelector('input[name=\"label\"]').value;\n    } else {\n        buttontext = document.querySelector('input[name=\"actiontext\"]').value;\n    }\n    Snippet = new SnippetMaker(hashcode, itemsData[itemid].name);\n    Snippet.setText(buttontext);\n\n    updatePreview(itemid, appearanceselector.value);\n    if (appearanceselector.value === 'imageandbutton') {\n        codearea[0].innerText = Snippet.getImageAndText();\n    } else if (appearanceselector.value === 'image') {\n        codearea[0].innerText = Snippet.getImage();\n    } else {\n        codearea[0].innerText = Snippet.getText();\n    }\n\n};\n\n/**\n * Update the preview image.\n *\n * @param {int} itemid\n * @param {string} previewtype\n */\nconst updatePreview = (itemid, previewtype) => {\n    let previewnode = document.querySelector('.preview');\n    previewnode.children.forEach((child) => { previewnode.removeChild(child); });\n\n    let wrappingdiv = document.createElement('div');\n    wrappingdiv.classList.add('block-stash-item');\n\n    if (previewtype === 'text') {\n        let textanchour = document.createElement('a');\n        textanchour.setAttribute('href', '#');\n        textanchour.innerText = document.querySelector('input[name=\"label\"]').value;\n        wrappingdiv.appendChild(textanchour);\n    } else {\n        // Image and text\n        let imagediv = document.createElement('div');\n        imagediv.classList.add('item-image');\n        imagediv.style.backgroundImage = 'url(' + itemsData[itemid].imageurl + ')';\n        if (previewtype === 'imageandbutton') {\n            let buttondiv = document.createElement('div');\n            buttondiv.classList.add('item-action');\n            let button = document.createElement('button');\n            button.classList.add('btn', 'btn-secondary', 'tiny-stash-button-preview');\n            button.setAttribute('disabled', true);\n            let temp = document.querySelector('input[name=\"actiontext\"]');\n            button.innerHTML = temp.value;\n            buttondiv.appendChild(button);\n            wrappingdiv.appendChild(imagediv);\n            wrappingdiv.appendChild(buttondiv);\n        } else {\n            wrappingdiv.appendChild(imagediv);\n        }\n    }\n    previewnode.appendChild(wrappingdiv);\n};\n\nconst getDropData = async (contextid) => {\n    try {\n        let temp = await WebService.getAllDropData(contextid);\n        return temp;\n    } catch (e) {\n        return {};\n    }\n};\n\nconst getItemData = async (courseid) => {\n    try {\n        let temp = await WebService.getAllItemData(courseid);\n        return temp;\n    } catch (e) {\n        return {};\n    }\n};\n"],"names":["itemsData","Snippet","editor","displayDialogue","async","contextid","data","getDropData","courseid","itemdata","getItemData","items","forEach","item","id","modalPromises","ModalFactory","create","title","type","types","SAVE_CANCEL","body","Templates","render","large","show","$root","getRoot","root","savedata","on","ModalEvents","hidden","destroy","bodyRendered","addAddDropListener","addAppearanceListener","addTextAndImageListener","document","querySelector","addEventListener","e","preventDefault","carousel","AddItem","init","DropAdd","Status","then","html","js","selectnode","replaceNodeContents","selectitemnode","i","options","length","option","dataset","hash","SavedIndex","selected","setPreview","save","codearea","getAttribute","getElementsByClassName","innerText","execCommand","event","element","target","elementtype","nodeName","dropcode","selectedelement","selectedOptions","value","classList","remove","add","itemid","buttontext","currentTarget","setText","getImageAndText","itemnode","hashcode","appearanceselector","SnippetMaker","name","updatePreview","getImage","getText","previewtype","previewnode","children","child","removeChild","wrappingdiv","createElement","textanchour","setAttribute","appendChild","imagediv","style","backgroundImage","imageurl","buttondiv","button","temp","innerHTML","WebService","getAllDropData","getAllItemData"],"mappings":";;;;;;;mdAkCIA,UAAY,GACZC,QAAU,yBAMeC,SACzBC,gBAAgBD,eASdC,gBAAkBC,MAAAA,aAChBC,WAAY,yBAAaH,QACzBI,WAAaC,YAAYF,WACzBG,UAAW,yBAAYN,QACvBO,eAAiBC,YAAYF,UAC7BC,SAASE,OACTF,SAASE,MAAMC,SAASC,OACpBb,UAAUa,KAAKC,IAAMD,cAKvBE,oBAAsBC,uBAAaC,OAAO,CAC5CC,MAAO,mBACPC,KAAMH,uBAAaI,MAAMC,YACzBC,KAAMC,mBAAUC,OAAO,gCAAiClB,MACxDmB,OAAO,IAGXV,cAAcW,aACRC,YAAcZ,cAAca,UAC5BC,KAAOF,MAAM,OAEfG,SAAW,GAEfH,MAAMI,GAAGC,sBAAYC,QAAQ,KACzBlB,cAAcmB,aAGlBP,MAAMI,GAAGC,sBAAYG,cAAc,KAC/BC,mBAAmBlC,QAGnBmC,wBACAC,0BAEoBC,SAASC,cAAc,wBAC7BC,iBAAiB,SAAUC,IACrCA,EAAEC,qCACA,aAAaC,SAAS,4BACtB,aAAaA,SAAS,SACxBC,QAAQC,KAAK5C,+BAGf,aAAa6B,GAAG,qBAAqB3B,UACb,SAAlB2C,QAAQC,SAGR1C,WAAaC,YAAYF,8BACfmB,OAAO,yBAA0BlB,MAAM2C,MAAK,CAACC,KAAMC,UACrDC,WAAab,SAASC,cAAc,8CAC9Ba,oBAAoBD,WAAYF,KAAMC,QAC5CG,eAAiBf,SAASC,cAAc,+BACvC,IAAIe,EAAE,EAAGA,EAAGD,eAAeE,QAAQC,OAAQF,IAAK,KAC7CG,OAASJ,eAAeE,QAAQD,GAChCG,OAAOC,QAAQC,MAAQb,QAAQc,aAC/BH,OAAOI,UAAW,EAClBC,WAAWL,OAAOC,QAAQ7C,GAAI4C,OAAOC,QAAQC,OAGrDxB,mBAAmBlC,WAEvB6C,QAAQC,OAAS,SAEC,SAAlBH,QAAQG,SAERhD,UAAY,GACZS,eAAiBC,YAAYF,UAC7BC,SAASE,MAAMC,SAASC,OACpBb,UAAUa,KAAKC,IAAMD,QAEzBgC,QAAQG,OAAS,eAK7BrB,MAAMI,GAAGC,sBAAYgC,MAAM,SAEnBC,SAAW,GAEXA,SAD2C,SAF/B1B,SAASC,cAAc,2CAEzB0B,aAAa,iBACZ3B,SAAS4B,uBAAuB,wBAEhC5B,SAAS4B,uBAAuB,yBAE/CrC,SAASmC,SAAWA,SAAS,GAAGG,UAChClE,OAAOmE,YAAY,oBAAoB,EAAOvC,SAASmC,aAG3DpC,KAAKY,iBAAiB,SAAU6B,YACxBC,QAAUD,MAAME,OAChBC,YAAcF,QAAQZ,QAAQxC,QACT,WAArBoD,QAAQG,UAAwC,QAAfD,aACjCV,WAAWQ,QAAQZ,QAAQ7C,GAAIyD,QAAQZ,QAAQC,MAE1B,WAArBW,QAAQG,UAAwC,SAAfD,YAAwB,KACrDR,SAAW1B,SAAS4B,uBAAuB,yBAC3CQ,SAAW,uBAA0BJ,QAAQZ,QAAQC,KAAO,KAChEK,SAAS,GAAGG,UAAYO,cAK9BvC,mBAAsBlC,SACbqC,SAAS4B,uBAAuB,uBACtC,GAAG1B,iBAAiB,SAAUC,IAC/BA,EAAEC,qCACA,aAAaC,SAAS,uBACtB,aAAaA,SAAS,SAExBG,QAAQD,KAAK9C,UAAWE,YAI1BmC,sBAAwB,KACTE,SAASC,cAAc,0BAC7BC,iBAAiB,UAAWC,QAC/BkC,gBAAkBlC,EAAE8B,OAAOK,gBAAgB,GAClB,QAAzBD,gBAAgBE,QAChBvC,SAASC,cAAc,kBAAkBuC,UAAUC,OAAO,UAC1DzC,SAASC,cAAc,uBAAuBuC,UAAUE,IAAI,WAEnC,SAAzBL,gBAAgBE,QAChBvC,SAASC,cAAc,kBAAkBuC,UAAUE,IAAI,UACvD1C,SAASC,cAAc,uBAAuBuC,UAAUE,IAAI,WAEnC,kBAAzBL,gBAAgBE,QAChBvC,SAASC,cAAc,kBAAkBuC,UAAUE,IAAI,UACvD1C,SAASC,cAAc,uBAAuBuC,UAAUC,OAAO,eAE/DE,OAAS3C,SAASC,cAAc,2BAA2BqC,gBAAgB,GAAGlB,QAAQ7C,GAC1FiD,WAAWmB,OAAQN,gBAAgBE,WAIrCxC,wBAA0B,KACbC,SAASC,cAAc,4BAE7BC,iBAAiB,SAAUC,QAE3BH,SAASC,cAAc,gCAGxB2C,WAAazC,EAAE0C,cAAcN,MACbvC,SAASC,cAAc,8BAC7B4B,UAAYe,eAEtBlB,SAAW1B,SAAS4B,uBAAuB,wBAC/ClE,QAAQoF,QAAQF,YAChBlB,SAAS,GAAGG,UAAYnE,QAAQqF,qBAGpB/C,SAASC,cAAc,uBAE7BC,iBAAiB,SAAS,SAE3BF,SAASC,cAAc,gCAGxB+C,SAAWhD,SAASC,cAAc,2BACtCuB,WAAWwB,SAASV,gBAAgB,GAAGlB,QAAQ7C,GAAIyE,SAASV,gBAAgB,GAAGlB,QAAQC,UAYzFG,WAAa,CAACmB,OAAQM,gBAEpBC,mBAAqBlD,SAASC,cAAc,0BAC5CyB,SAAW1B,SAAS4B,uBAAuB,wBAC3CgB,WAAa,GAEbA,WAD6B,SAA7BM,mBAAmBX,MACNvC,SAASC,cAAc,uBAAuBsC,MAE9CvC,SAASC,cAAc,4BAA4BsC,MAEpE7E,QAAU,IAAIyF,sBAAaF,SAAUxF,UAAUkF,QAAQS,MACvD1F,QAAQoF,QAAQF,YAEhBS,cAAcV,OAAQO,mBAAmBX,OACR,mBAA7BW,mBAAmBX,MACnBb,SAAS,GAAGG,UAAYnE,QAAQqF,kBACI,UAA7BG,mBAAmBX,MAC1Bb,SAAS,GAAGG,UAAYnE,QAAQ4F,WAEhC5B,SAAS,GAAGG,UAAYnE,QAAQ6F,WAWlCF,cAAgB,CAACV,OAAQa,mBACvBC,YAAczD,SAASC,cAAc,YACzCwD,YAAYC,SAASrF,SAASsF,QAAYF,YAAYG,YAAYD,cAE9DE,YAAc7D,SAAS8D,cAAc,UACzCD,YAAYrB,UAAUE,IAAI,oBAEN,SAAhBc,YAAwB,KACpBO,YAAc/D,SAAS8D,cAAc,KACzCC,YAAYC,aAAa,OAAQ,KACjCD,YAAYlC,UAAY7B,SAASC,cAAc,uBAAuBsC,MACtEsB,YAAYI,YAAYF,iBACrB,KAECG,SAAWlE,SAAS8D,cAAc,UACtCI,SAAS1B,UAAUE,IAAI,cACvBwB,SAASC,MAAMC,gBAAkB,OAAS3G,UAAUkF,QAAQ0B,SAAW,IACnD,mBAAhBb,YAAkC,KAC9Bc,UAAYtE,SAAS8D,cAAc,OACvCQ,UAAU9B,UAAUE,IAAI,mBACpB6B,OAASvE,SAAS8D,cAAc,UACpCS,OAAO/B,UAAUE,IAAI,MAAO,gBAAiB,6BAC7C6B,OAAOP,aAAa,YAAY,OAC5BQ,KAAOxE,SAASC,cAAc,4BAClCsE,OAAOE,UAAYD,KAAKjC,MACxB+B,UAAUL,YAAYM,QACtBV,YAAYI,YAAYC,UACxBL,YAAYI,YAAYK,gBAExBT,YAAYI,YAAYC,UAGhCT,YAAYQ,YAAYJ,cAGtB7F,YAAcH,MAAAA,6BAEK6G,WAAWC,eAAe7G,WAE7C,MAAOqC,SACE,KAIThC,YAAcN,MAAAA,4BAEK6G,WAAWE,eAAe3G,UAE7C,MAAOkC,SACE"}