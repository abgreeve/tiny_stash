{"version":3,"file":"ui.min.js","sources":["../src/ui.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny stash UI.\n *\n * @module      tiny_stash/ui\n * @copyright   2023 Adrian Greeve <adriangreeve.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Templates from 'core/templates';\nimport Ajax from 'core/ajax';\nimport {getContextId} from 'editor_tiny/options';\nimport {getCourseId} from 'tiny_stash/options';\nimport $ from 'jquery';\nimport * as DropAdd from 'tiny_stash/drop-add';\n\nlet itemsData = {};\n\n/**\n * Handle action\n * @param {TinyMCE} editor\n */\nexport const handleAction = (editor) => {\n    displayDialogue(editor);\n};\n\n/**\n * Display the equation editor\n * @param {TinyMCE} editor\n * @returns {Promise<void>}\n */\nconst displayDialogue = async(editor) => {\n    let contextid = getContextId(editor);\n    let data = await getAllDropData(contextid);\n    let courseid = getCourseId(editor);\n    let itemdata = await getAllItemData(courseid);\n    itemdata.items.forEach((item) => {\n        itemsData[item.id] = item;\n    });\n\n    window.console.log(data);\n\n    const modalPromises = await ModalFactory.create({\n        title: \"Stash stuff here\",\n        type: ModalFactory.types.SAVE_CANCEL,\n        body: Templates.render('tiny_stash/drop-code-selector', data),\n        large: true,\n    });\n\n    modalPromises.show();\n    const $root = await modalPromises.getRoot();\n    const root = $root[0];\n\n    let savedata = {};\n\n    $root.on(ModalEvents.hidden, () => {\n        modalPromises.destroy();\n    });\n\n    $root.on(ModalEvents.bodyRendered, () => {\n        let temp = document.getElementsByClassName('tiny-stash-add-drop');\n        temp[0].addEventListener('click', (e) => {\n            e.preventDefault();\n            $('.carousel').carousel('next');\n            $('.carousel').carousel('pause');\n            // init drop add page.\n            DropAdd.init(itemsData, editor);\n        });\n    });\n\n    $root.on(ModalEvents.save, () => {\n        let activetab = document.querySelector('[aria-selected=\"true\"][data-tiny-stash]');\n        let codearea = '';\n        if (activetab.getAttribute('aria-controls') == 'items') {\n            codearea = document.getElementsByClassName('tiny-stash-item-code');\n        } else {\n            codearea = document.getElementsByClassName('tiny-stash-trade-code');\n        }\n        savedata.codearea = codearea[0].innerText;\n        editor.execCommand('mceInsertContent', false, savedata.codearea);\n    });\n\n    root.addEventListener('click', (event) => {\n        let element = event.target;\n        let elementtype = element.dataset.type;\n        // window.console.log(element.nodeName);\n        // window.console.log(element.classList);\n        if (element.nodeName === \"OPTION\" && elementtype == 'item') {\n            let itemid = element.dataset.id;\n            let codearea = document.getElementsByClassName('tiny-stash-item-code');\n            let dropcode = \"[stashdrop secret=\\\"\" + element.dataset.hash + \"\\\" text=\\\"Pick up!\\\" name=\\\"\" +\n                    itemsData[itemid].name + \"\\\" image]\";\n            updatePreview(itemid);\n            codearea[0].innerText = dropcode;\n        }\n        if (element.nodeName === \"OPTION\" && elementtype == 'trade') {\n            let codearea = document.getElementsByClassName('tiny-stash-trade-code');\n            let dropcode = \"[stashtrade secret=\\\"\" + element.dataset.hash + \"\\\"]\";\n            codearea[0].innerText = dropcode;\n        }\n    });\n};\n\n// const removeChildren = (node) => {\n//     while (node.firstChild) {\n//         node.removeChild(node.lastChild);\n//     }\n// };\n\n// const addFooterListeners = () => {\n//     let backbutton = document.querySelector('button[data-action=\"back\"]');\n//     backbutton.addEventListener('click', (e) => {\n//         e.preventDefault();\n//         $('.carousel').carousel('prev');\n//         $('.carousel').carousel('pause');\n//     });\n// };\n\nconst updatePreview = (itemid) => {\n    let previewnode = document.querySelector('.preview');\n    previewnode.children.forEach((child) => { previewnode.removeChild(child); });\n\n    let wrappingdiv = document.createElement('div');\n    wrappingdiv.classList.add('block-stash-item');\n    let imagediv = document.createElement('div');\n    imagediv.classList.add('item-image');\n    imagediv.style.backgroundImage = 'url(' + itemsData[itemid].imageurl + ')';\n    wrappingdiv.appendChild(imagediv);\n    previewnode.appendChild(wrappingdiv);\n};\n\nconst getAllDropData = (contextid) => Ajax.call([{\n    methodname: 'block_stash_get_all_drops',\n    args: {contextid: contextid}\n}])[0];\n\nconst getAllItemData = (courseid) => Ajax.call([{\n    methodname: 'block_stash_get_items',\n    args: {courseid: courseid}\n}])[0];\n"],"names":["itemsData","editor","displayDialogue","async","contextid","data","getAllDropData","courseid","getAllItemData","items","forEach","item","id","window","console","log","modalPromises","ModalFactory","create","title","type","types","SAVE_CANCEL","body","Templates","render","large","show","$root","getRoot","root","savedata","on","ModalEvents","hidden","destroy","bodyRendered","document","getElementsByClassName","addEventListener","e","preventDefault","carousel","DropAdd","init","save","codearea","querySelector","getAttribute","innerText","execCommand","event","element","target","elementtype","dataset","nodeName","itemid","dropcode","hash","name","updatePreview","previewnode","children","child","removeChild","wrappingdiv","createElement","classList","add","imagediv","style","backgroundImage","imageurl","appendChild","Ajax","call","methodname","args"],"mappings":";;;;;;;g+BAgCIA,UAAY,yBAMaC,SACzBC,gBAAgBD,eAQdC,gBAAkBC,MAAAA,aAChBC,WAAY,yBAAaH,QACzBI,WAAaC,eAAeF,WAC5BG,UAAW,yBAAYN,eACNO,eAAeD,WAC3BE,MAAMC,SAASC,OACpBX,UAAUW,KAAKC,IAAMD,QAGzBE,OAAOC,QAAQC,IAAIV,YAEbW,oBAAsBC,uBAAaC,OAAO,CAC5CC,MAAO,mBACPC,KAAMH,uBAAaI,MAAMC,YACzBC,KAAMC,mBAAUC,OAAO,gCAAiCpB,MACxDqB,OAAO,IAGXV,cAAcW,aACRC,YAAcZ,cAAca,UAC5BC,KAAOF,MAAM,OAEfG,SAAW,GAEfH,MAAMI,GAAGC,sBAAYC,QAAQ,KACzBlB,cAAcmB,aAGlBP,MAAMI,GAAGC,sBAAYG,cAAc,KACpBC,SAASC,uBAAuB,uBACtC,GAAGC,iBAAiB,SAAUC,IAC/BA,EAAEC,qCACA,aAAaC,SAAS,4BACtB,aAAaA,SAAS,SAExBC,QAAQC,KAAK5C,UAAWC,cAIhC2B,MAAMI,GAAGC,sBAAYY,MAAM,SAEnBC,SAAW,GAEXA,SAD2C,SAF/BT,SAASU,cAAc,2CAEzBC,aAAa,iBACZX,SAASC,uBAAuB,wBAEhCD,SAASC,uBAAuB,yBAE/CP,SAASe,SAAWA,SAAS,GAAGG,UAChChD,OAAOiD,YAAY,oBAAoB,EAAOnB,SAASe,aAG3DhB,KAAKS,iBAAiB,SAAUY,YACxBC,QAAUD,MAAME,OAChBC,YAAcF,QAAQG,QAAQnC,QAGT,WAArBgC,QAAQI,UAAwC,QAAfF,YAAuB,KACpDG,OAASL,QAAQG,QAAQ3C,GACzBkC,SAAWT,SAASC,uBAAuB,wBAC3CoB,SAAW,sBAAyBN,QAAQG,QAAQI,KAAO,2BACvD3D,UAAUyD,QAAQG,KAAO,WACjCC,cAAcJ,QACdX,SAAS,GAAGG,UAAYS,YAEH,WAArBN,QAAQI,UAAwC,SAAfF,YAAwB,KACrDR,SAAWT,SAASC,uBAAuB,yBAC3CoB,SAAW,uBAA0BN,QAAQG,QAAQI,KAAO,KAChEb,SAAS,GAAGG,UAAYS,cAoB9BG,cAAiBJ,aACfK,YAAczB,SAASU,cAAc,YACzCe,YAAYC,SAASrD,SAASsD,QAAYF,YAAYG,YAAYD,cAE9DE,YAAc7B,SAAS8B,cAAc,OACzCD,YAAYE,UAAUC,IAAI,wBACtBC,SAAWjC,SAAS8B,cAAc,OACtCG,SAASF,UAAUC,IAAI,cACvBC,SAASC,MAAMC,gBAAkB,OAASxE,UAAUyD,QAAQgB,SAAW,IACvEP,YAAYQ,YAAYJ,UACxBR,YAAYY,YAAYR,cAGtB5D,eAAkBF,WAAcuE,cAAKC,KAAK,CAAC,CAC7CC,WAAY,4BACZC,KAAM,CAAC1E,UAAWA,cAClB,GAEEI,eAAkBD,UAAaoE,cAAKC,KAAK,CAAC,CAC5CC,WAAY,wBACZC,KAAM,CAACvE,SAAUA,aACjB"}