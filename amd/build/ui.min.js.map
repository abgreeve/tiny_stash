{"version":3,"file":"ui.min.js","sources":["../src/ui.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny stash UI.\n *\n * @module      tiny_stash/ui\n * @copyright   2023 Adrian Greeve <adriangreeve.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Templates from 'core/templates';\nimport {getContextId} from 'editor_tiny/options';\nimport {getCourseId, getShortCodes, getItemDataFromEditor, getTradeDataFromEditor} from 'tiny_stash/options';\nimport $ from 'jquery';\nimport * as DropAdd from 'tiny_stash/drop-add';\nimport * as AddItem from 'tiny_stash/additem';\nimport * as AddTrade from 'tiny_stash/addtrade';\nimport * as Help from 'tiny_stash/helptabs';\nimport SnippetMaker from 'tiny_stash/local/classes/snippetmaker';\nimport * as WebService from 'tiny_stash/webservice-calls';\nimport {get_string as getString} from 'core/str';\nimport { getDropDataFromEditor } from './options';\n\nlet itemsData = {};\nlet tradeData = {};\nlet Snippet = {};\n\nconst TS_ITEM_PAGE = 1;\nconst TS_DROP_PAGE = 2;\nconst TS_TRADE_PAGE = 3;\n\n/**\n * Handle action\n * @param {TinyMCE} editor\n */\nexport const handleAction = (editor) => {\n    displayDialogue(editor);\n};\n\nexport const handleInit = editor => async () => {\n    // NB: This function updates tradeData in the global scope.\n    // tradeData is used below in hashcodetotrade.\n    formatTradeInformation(getTradeDataFromEditor(editor), getItemDataFromEditor(editor));\n\n    // These mappings associate shortcodes to objects which contain the necessary information\n    // to render a template.\n    const hashcodetoitem = Object.values(getDropDataFromEditor(editor)).reduce((c, v) => ({ ...c, [v.hashcode]: v }), {});\n    const hashcodetotrade = Object.values(tradeData).reduce((c, v) => ({ ...c, [v.hashcode]: v }), {});\n    const allhashcodes = [...Object.keys(hashcodetoitem), ...Object.keys(hashcodetotrade)];\n\n    const templategetters = {\n        stashdrop: data => ({\n            template: \"tiny_stash/item-preview\",\n            context: { ...data, ...(data.image ? { image: hashcodetoitem[data.secret].imageurl } : {}) }\n        }),\n        stashtrade: data => ({ template: \"tiny_stash/trade-preview\", context: { ...hashcodetotrade[data.secret] } })\n    };\n\n    const shortcodes = getShortCodes(editor).filter(shortcode => templategetters.hasOwnProperty(shortcode));\n    const shortcodetopromise = shortcode => {\n        const data = shortcode.matchAll(/(\\w+)(?:=?\"([^\"]*)\")?/g).reduce((c, v) => ({ ...c, ...{[v[1]]: v[2] ?? v[1]}}), {});\n\n        // This can happen when an item has been inserted but then later deleted\n        // via the stash settings. We can't render it in this case (as it's deleted)\n        // so instead just return the shortcode.\n        if (!allhashcodes.includes(data.secret)) {\n            return Promise.resolve(shortcode);\n        }\n\n        const {template, context} = templategetters[Object.keys(data)[0]](data);\n        return Templates.renderForPromise(template, {shortcode: shortcode, ...context}).then(preview => preview.html);\n    };\n\n    // Mildly obscure code warning. Normally when you use a regex to split\n    // a string, the match itself is not included in the resulting array.\n    //\n    // From MDN docs:\n    //     When found, separator is removed from the string, and the\n    //     substrings are returned in an array.\n    //\n    // By adding the ( ) around the pattern, the match itself is not included\n    // but the capture group (which is the entire matched string) is spliced\n    // in to the array.\n    //\n    // From MDN docs:\n    //     If separator is a regular expression with capturing groups, then\n    //     each time separator matches, the captured groups (including any\n    //     undefined results) are spliced into the output array. This\n    //     behavior is specified by the regexp's Symbol.split method.\n    const regex = new RegExp(`((?:<p>){0,1}\\\\[(?:${shortcodes.join('|')})[^\\\\]]*\\](?:<\\\\/p>){0,1})`);\n    const promises = editor.getContent().split(regex).map(segment => {\n        const trimmed = segment.replace(/^<p>|<\\/p>$/g, '');\n        const isshortcode = shortcodes.reduce((c, v) => c || (trimmed.startsWith(`[${v}`) && trimmed.endsWith(']')), false);\n\n        return isshortcode ? shortcodetopromise(trimmed) : Promise.resolve(segment);\n    });\n\n    Promise.all(promises).then(rendered => editor.setContent(rendered.join('')));\n};\n\nexport const handleSubmit = editor => () => {\n    const tempcontainer = document.createElement('div');\n    const content = editor.getContent();\n    tempcontainer.innerHTML = content;\n\n    tempcontainer.querySelectorAll('.tiny-stash-preview').forEach(stashitem => {\n        const shortcode = stashitem.querySelectorAll('.tiny-stash-shortcode')[0].textContent;\n        stashitem.replaceWith(shortcode);\n    });\n\n    tempcontainer.querySelectorAll('.tiny-stash-trade-preview').forEach(trade => {\n        const shortcode = trade.querySelectorAll('.tiny-stash-shortcode')[0].textContent;\n        trade.replaceWith(shortcode);\n    });\n\n    // TinyMCE does this weird thing where it leaves HTML like:\n    //\n    // <p style=\"top: 8px;\" data-mce-caret=\"after\" data-mce-bogus=\"all\">\n    //\n    // when the caret is present after an item with contenteditable=\"false\"\n    //\n    // getContent() is __supposed__ to remove these \"internal\" nodes before\n    // returning the string - but it doesn't seem to work all the time and\n    // there's at least one bug report that seems possibly related:\n    //\n    // https://github.com/tinymce/tinymce/issues/8032\n    //\n    // All of the problematic nodes that I've observed have the data-mce-bogus\n    // attribute, so we just strip those out here.\n    tempcontainer.querySelectorAll('[data-mce-bogus]').forEach(node => node.parentNode.removeChild(node));\n\n    // Only update the editor content to shortcodes when there are no validation\n    // errors. If we don't do this then the content will be updated, but the form\n    // won't submit and the user will be left looking at just shortcodes.\n    if (editor.getElement().closest('form').querySelector('.form-control.is-invalid') === null) {\n        editor.setContent(tempcontainer.innerHTML);\n        editor.save();\n    }\n};\n\n/**\n * Display the drop dialogue.\n *\n * @param {TinyMCE} editor\n * @returns {Promise<void>}\n */\nconst displayDialogue = async(editor) => {\n    let contextid = getContextId(editor);\n    let data = await getDropData(contextid);\n    let courseid = getCourseId(editor);\n    await updateItems(courseid);\n    formatTradeInformation(data.trades, itemsData);\n\n    if (Object.keys(itemsData).length == 0) {\n        data.itemempty = true;\n    } else if (data.items.length == 0) {\n        data.dropempty = true;\n    } else {\n        data.normal = true;\n    }\n\n    // Need the same information for trades\n    data.tradeavailable = (data.trades.length > 0);\n    window.console.log(data);\n\n    const modalPromises = await ModalFactory.create({\n        title: getString('modalheading', 'tiny_stash'),\n        type: ModalFactory.types.SAVE_CANCEL,\n        body: Templates.render('tiny_stash/drop-code-selector', data),\n        large: true,\n    });\n\n    modalPromises.show();\n    const $root = await modalPromises.getRoot();\n    const root = $root[0];\n\n    $root.on(ModalEvents.hidden, () => {\n        modalPromises.destroy();\n    });\n\n    $root.on(ModalEvents.bodyRendered, () => {\n        Help.init();\n        addTabListeners();\n        addDropListener(editor);\n\n        // Add a listener for the appearance select box.\n        if (data.normal) {\n            addAppearanceListener();\n            addTextAndImageListener();\n        }\n\n        let additembuttons = document.querySelectorAll('.tiny-stash-add-item');\n        for (let additembutton of additembuttons) {\n            additembutton.addEventListener('click', (e) =>\n                shiftAndMove(e, TS_ITEM_PAGE, AddItem, editor, e.currentTarget.dataset.location));\n        }\n\n        document.querySelector('.tiny-stash-add-trade').addEventListener('click', (e) =>\n            shiftAndMove(e, TS_TRADE_PAGE, AddTrade, editor));\n\n        $('.carousel').on('slide.bs.carousel', async () => {\n            if (DropAdd.getStatus() == 'Saved') {\n                // Reload the drop list.\n                data = await getDropData(contextid);\n                const zerostatenode = document.querySelector('.tiny-stash-zero-state');\n                if (zerostatenode) {\n                    // We now have a location we can add the drop form.\n                    Templates.render('tiny_stash/local/tabs/drop-form', data).then((html, js) => {\n                        const parentnode = zerostatenode.parentNode;\n                        parentnode.removeChild(zerostatenode);\n                        Templates.appendNodeContents(parentnode, html, js);\n                        // Add back the listeners for the drop form.\n                        addAppearanceListener();\n                        addTextAndImageListener();\n                    });\n                }\n\n                Templates.render('tiny_stash/drop-select', data).then((html, js) => {\n                    let selectnode = document.querySelector('.tiny-stash-drop-select');\n                    Templates.replaceNodeContents(selectnode, html, js);\n                    let selectitemnode = document.querySelector('.tiny-stash-item-select');\n                    for (let i=0; i< selectitemnode.options.length; i++) {\n                        let option = selectitemnode.options[i];\n                        if (option.dataset.hash == DropAdd.SavedIndex) {\n                            option.selected = true;\n                            setPreview(option.dataset.id, option.dataset.hash);\n                        }\n                    }\n                });\n                DropAdd.setStatus('Clear');\n            }\n            if (AddItem.getStatus() == 'Saved') {\n                if (data.itemempty) {\n                    if (data.items.length == 0) {\n                        data.dropempty = true;\n                        // Add the message about creating a location.\n                        const contentnode = document.querySelector('.tiny-stash-zero-state');\n                        AddItem.removeChildren(contentnode);\n                        const messageheader = document.createElement('h3');\n                        messageheader.innerText = await getString('locationneeded', 'tiny_stash');\n                        const messagenode = document.createElement('p');\n                        messagenode.innerText = await getString('nolocations', 'tiny_stash');\n                        contentnode.appendChild(messageheader);\n                        contentnode.appendChild(messagenode);\n                        // enable the location button.\n                        document.querySelector('.tiny-stash-add-drop').attributes.removeNamedItem('disabled');\n                    }\n                    data.itemempty = false;\n                }\n                // Reload the drop list.\n                updateItems(courseid);\n                // To be set in the hid section\n                AddItem.setStatus('Clear');\n            }\n\n            if (AddTrade.getStatus() == 'Saved') {\n                // Reload the trade select element.\n                await updateItems(courseid);\n                data = await getDropData(contextid);\n                formatTradeInformation(data.trades, itemsData);\n\n                const zerostatenode = document.querySelector('.tiny-stash-zero-state-trade');\n                if (zerostatenode) {\n                    // We now have a location we can add the trade form.\n                    Templates.render('tiny_stash/local/tabs/trade-form', data).then((html, js) => {\n                        const parentnode = zerostatenode.parentNode;\n                        parentnode.removeChild(zerostatenode);\n                        Templates.appendNodeContents(parentnode, html, js);\n                    });\n                }\n\n                Templates.render('tiny_stash/local/selectors/trade-drop-selector', data).then((html, js) => {\n                    let selectnode = document.querySelector('.tiny-stash-trade-select');\n                    Templates.replaceNodeContents(selectnode, html, js);\n                    let selectitemnode = document.querySelector('.tiny-stash-trade-selector');\n                    for (let i=0; i< selectitemnode.options.length; i++) {\n                        let option = selectitemnode.options[i];\n                        if (option.dataset.hash == AddTrade.TradeHash) {\n                            option.selected = true;\n                            setTradePreview(option.dataset.hash);\n                        }\n                    }\n                });\n                AddTrade.setStatus('ready');\n            }\n        });\n    });\n\n    $root.on(ModalEvents.save, () => {\n        let activetab = document.querySelector('[aria-selected=\"true\"][data-tiny-stash]');\n        const previewnodeclasssuffix = activetab.getAttribute('aria-controls') == 'items' ? 'preview' : 'trade-preview';\n        const previewnode = document.querySelector('.tiny-stash-' + previewnodeclasssuffix).cloneNode(true);\n\n        editor.execCommand('mceInsertContent', false, previewnode.outerHTML);\n    });\n\n    root.addEventListener('click', (event) => {\n        let element = event.target;\n        let elementtype = element.dataset.type;\n        if (element.nodeName === \"OPTION\" && elementtype == 'item') {\n            setPreview(element.dataset.id, element.dataset.hash);\n        }\n        if (element.nodeName === \"OPTION\" && elementtype == 'trade') {\n            let codearea = document.getElementsByClassName('tiny-stash-trade-code');\n            let dropcode = \"[stashtrade secret=\\\"\" + element.dataset.hash + \"\\\"]\";\n            codearea[0].innerText = dropcode;\n            setTradePreview(element.dataset.hash);\n        }\n    });\n};\n\nconst updateItems = async (courseid) => {\n    itemsData = {};\n    let itemdata = await getItemData(courseid);\n    if (itemdata.items) {\n        itemdata.items.forEach((item) => {\n            itemsData[item.id] = item;\n        });\n    }\n};\n\nconst addTabListeners = () => {\n    const tabnodes = document.querySelectorAll('.tiny-stash-tabs');\n    tabnodes.forEach((tabnode) => {\n        tabnode.addEventListener('click', (e) => {\n            const tabname = e.currentTarget.children[0].attributes['id'].value;\n            if (tabname == 'help-tab') {\n                return;\n            }\n            const savenode = document.querySelector('button[data-action=\"save\"]');\n            if (!savenode) {\n                Templates.render('tiny_stash/local/footers/main-footer', {}).then((html, js) => {\n                    let modalfooter = document.querySelector('.modal-footer');\n                    // Remove existing buttons.\n                    AddItem.removeChildren(modalfooter);\n                    Templates.appendNodeContents(modalfooter, html, js);\n                });\n            }\n        });\n    });\n};\n\nconst addDropListener = (editor) => {\n    document.getElementsByClassName('tiny-stash-add-drop')[0].addEventListener('click', (e) =>\n        shiftAndMove(e, TS_DROP_PAGE, DropAdd, itemsData, editor));\n};\n\nconst addAppearanceListener = () => {\n    let selectnode = document.querySelector('.tiny-stash-appearance');\n    selectnode.addEventListener('change', (e) => {\n        let selectedelement = e.target.selectedOptions[0];\n        if (selectedelement.value == 'text') {\n            document.querySelector('.snippet-label').classList.remove('d-none');\n            document.querySelector('.snippet-actiontext').classList.add('d-none');\n        }\n        if (selectedelement.value == 'image') {\n            document.querySelector('.snippet-label').classList.add('d-none');\n            document.querySelector('.snippet-actiontext').classList.add('d-none');\n        }\n        if (selectedelement.value == 'imageandbutton') {\n            document.querySelector('.snippet-label').classList.add('d-none');\n            document.querySelector('.snippet-actiontext').classList.remove('d-none');\n        }\n\n        let itemselect = document.querySelector('.tiny-stash-item-select').selectedOptions[0];\n        setPreview(itemselect.dataset.id, itemselect.dataset.hash);\n    });\n};\n\nconst addTextAndImageListener = () => {\n    let textnode = document.querySelector('input[name=\"actiontext\"]');\n\n    textnode.addEventListener('keyup', (e) => {\n        // if no preview exit early.\n        if (!document.querySelector('.block-stash-item')) {\n            return;\n        }\n\n        let previewnode = document.querySelector('#item .preview');\n        let buttontext = e.currentTarget.value;\n        let previewbutton = previewnode.querySelector('.tiny-stash-button-preview');\n        previewbutton.innerText = buttontext;\n        // Update the snippet text.\n        let codearea = document.querySelector('.tiny-stash-item-code');\n        let shortcodearea = previewnode.querySelector('.tiny-stash-shortcode');\n        Snippet.setText(buttontext);\n        codearea.innerText = Snippet.getImageAndText();\n        shortcodearea.innerText = Snippet.getImageAndText();\n    });\n\n    let labelnode = document.querySelector('input[name=\"label\"]');\n\n    labelnode.addEventListener('keyup', () => {\n        // if no preview exit early.\n        if (!document.querySelector('.block-stash-item')) {\n            return;\n        }\n        let itemnode = document.querySelector('.tiny-stash-item-select');\n        setPreview(itemnode.selectedOptions[0].dataset.id, itemnode.selectedOptions[0].dataset.hash);\n    });\n\n};\n\nconst setPreview = (itemid, hashcode) => {\n    // Check the appearance to determine what to display and update.\n    let appearanceselector = document.querySelector('.tiny-stash-appearance');\n    let codearea = document.getElementsByClassName('tiny-stash-item-code');\n    let buttontext = '';\n    if (appearanceselector.value === 'text') {\n        buttontext = document.querySelector('input[name=\"label\"]').value;\n    } else {\n        buttontext = document.querySelector('input[name=\"actiontext\"]').value;\n    }\n    Snippet = new SnippetMaker(hashcode, itemsData[itemid].name);\n    Snippet.setText(buttontext);\n\n    if (appearanceselector.value === 'imageandbutton') {\n        codearea[0].innerText = Snippet.getImageAndText();\n    } else if (appearanceselector.value === 'image') {\n        codearea[0].innerText = Snippet.getImage();\n    } else {\n        codearea[0].innerText = Snippet.getText();\n    }\n\n    let previewnode = document.querySelector('#item .preview');\n    previewnode.children.forEach(child => previewnode.removeChild(child));\n    const templatedata = {\n        'image': ['imageandbutton', 'image'].includes(appearanceselector.value) ? itemsData[itemid].imageurl : null,\n        'text': ['imageandbutton', 'text'].includes(appearanceselector.value) ? buttontext : null,\n        'shortcode': codearea[0].innerText\n    };\n\n    Templates.renderForPromise('tiny_stash/item-preview', templatedata).then(preview => {\n        Templates.replaceNodeContents(previewnode, preview.html, preview.js);\n    });\n};\n\nconst formatTradeInformation = (tradedata, itemdata) => {\n    let data = {};\n    for (let tradedatum of tradedata) {\n        data[tradedatum.tradeid] = {\n            'tradeid': tradedatum.tradeid,\n            'name': tradedatum.name,\n            'gaintitle': tradedatum.gaintitle,\n            'losstitle': tradedatum.losstitle,\n            'hashcode': tradedatum.hashcode,\n            'additems': [],\n            'lossitems': []\n        };\n\n        for (let gainitem of tradedatum.additems) {\n            if (gainitem) {\n                data[tradedatum.tradeid].additems.push({\n                    'itemid': gainitem.itemid,\n                    'quantity': gainitem.quantity,\n                    'name': itemdata[gainitem.itemid].name,\n                    'imageurl': itemdata[gainitem.itemid].imageurl\n                });\n            }\n        }\n\n        for (let lossitem of tradedatum.lossitems) {\n            if (lossitem) {\n                data[tradedatum.tradeid].lossitems.push({\n                    'itemid': lossitem.itemid,\n                    'quantity': lossitem.quantity,\n                    'name': itemdata[lossitem.itemid].name,\n                    'imageurl': itemdata[lossitem.itemid].imageurl\n                });\n            }\n        }\n    }\n    tradeData = data;\n};\n\nconst setTradePreview = (hashcode) => {\n    let codearea = document.getElementsByClassName('tiny-stash-trade-code');\n    let dropcode = \"[stashtrade secret=\\\"\" + hashcode + \"\\\"]\";\n    let selecteditem = {};\n\n    codearea[0].innerText = dropcode;\n    for (let tradeinfo of Object.entries(tradeData)) {\n        if (tradeinfo[1].hashcode == hashcode) {\n            selecteditem = tradeinfo[1];\n            break;\n        }\n    }\n    let tradepreviewnode = document.querySelector('#trade .preview');\n    AddItem.removeChildren(tradepreviewnode);\n    Templates.render('tiny_stash/trade-preview', {...selecteditem, shortcode: dropcode}).then((html, js) => {\n        Templates.replaceNodeContents(tradepreviewnode, html, js);\n    });\n};\n\nconst shiftAndMove = (e, carousellocation, func, ...args) => {\n    e.preventDefault();\n    $('.carousel').carousel(carousellocation);\n    $('.carousel').carousel('pause');\n    func.init(...args);\n};\n\nconst getDropData = async (contextid) => {\n    try {\n        let temp = await WebService.getAllDropData(contextid);\n        return temp;\n    } catch (e) {\n        return {};\n    }\n};\n\nconst getItemData = async (courseid) => {\n    try {\n        let temp = await WebService.getAllItemData(courseid);\n        return temp;\n    } catch (e) {\n        return {};\n    }\n};\n"],"names":["itemsData","tradeData","Snippet","editor","displayDialogue","async","formatTradeInformation","hashcodetoitem","Object","values","reduce","c","v","hashcode","hashcodetotrade","allhashcodes","keys","templategetters","stashdrop","data","template","context","image","secret","imageurl","stashtrade","shortcodes","filter","shortcode","hasOwnProperty","regex","RegExp","join","promises","getContent","split","map","segment","trimmed","replace","startsWith","endsWith","matchAll","includes","Promise","resolve","Templates","renderForPromise","then","preview","html","shortcodetopromise","all","rendered","setContent","tempcontainer","document","createElement","content","innerHTML","querySelectorAll","forEach","stashitem","textContent","replaceWith","trade","node","parentNode","removeChild","getElement","closest","querySelector","save","contextid","getDropData","courseid","updateItems","trades","length","itemempty","items","dropempty","normal","tradeavailable","window","console","log","modalPromises","ModalFactory","create","title","type","types","SAVE_CANCEL","body","render","large","show","$root","getRoot","root","on","ModalEvents","hidden","destroy","bodyRendered","Help","init","addTabListeners","addDropListener","addAppearanceListener","addTextAndImageListener","additembuttons","additembutton","addEventListener","e","shiftAndMove","AddItem","currentTarget","dataset","location","AddTrade","DropAdd","getStatus","zerostatenode","js","parentnode","appendNodeContents","selectnode","replaceNodeContents","selectitemnode","i","options","option","hash","SavedIndex","selected","setPreview","id","setStatus","contentnode","removeChildren","messageheader","innerText","messagenode","appendChild","attributes","removeNamedItem","TradeHash","setTradePreview","previewnodeclasssuffix","getAttribute","previewnode","cloneNode","execCommand","outerHTML","event","element","target","elementtype","nodeName","codearea","getElementsByClassName","dropcode","itemdata","getItemData","item","tabnode","children","value","modalfooter","selectedelement","selectedOptions","classList","remove","add","itemselect","buttontext","shortcodearea","setText","getImageAndText","itemnode","itemid","appearanceselector","SnippetMaker","name","getImage","getText","child","templatedata","tradedata","tradedatum","tradeid","gaintitle","losstitle","gainitem","additems","push","quantity","lossitem","lossitems","selecteditem","tradeinfo","entries","tradepreviewnode","carousellocation","func","preventDefault","carousel","args","WebService","getAllDropData","getAllItemData"],"mappings":"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"}