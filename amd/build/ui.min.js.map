{"version":3,"file":"ui.min.js","sources":["../src/ui.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny stash UI.\n *\n * @module      tiny_stash/ui\n * @copyright   2023 Adrian Greeve <adriangreeve.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Templates from 'core/templates';\nimport Ajax from 'core/ajax';\nimport {getContextId} from 'editor_tiny/options';\n\n/**\n * Handle action\n * @param {TinyMCE} editor\n */\nexport const handleAction = (editor) => {\n    displayDialogue(editor);\n};\n\n/**\n * Display the equation editor\n * @param {TinyMCE} editor\n * @returns {Promise<void>}\n */\nconst displayDialogue = async(editor) => {\n    let contextid = getContextId(editor);\n    let data = await getAllDropData(contextid);\n\n    const modalPromises = await ModalFactory.create({\n        type: ModalFactory.types.SAVE_CANCEL,\n        body: Templates.render('tiny_stash/drop-code-selector', data),\n        large: true,\n    });\n\n    modalPromises.show();\n    const $root = await modalPromises.getRoot();\n    const root = $root[0];\n\n    let savedata = {};\n\n    $root.on(ModalEvents.hidden, () => {\n        let activetab = document.querySelector('[aria-selected=\"true\"][data-tiny-stash]');\n        let codearea = '';\n        if (activetab.getAttribute('aria-controls') == 'items') {\n            codearea = document.getElementsByClassName('tiny-stash-item-code');\n        } else {\n            codearea = document.getElementsByClassName('tiny-stash-trade-code');\n        }\n        window.console.log(codearea[0]);\n        savedata.codearea = codearea[0].innerText;\n        modalPromises.destroy();\n    });\n\n    $root.on(ModalEvents.shown, () => {\n\n    });\n\n    root.addEventListener('click', (event) => {\n        let element = event.target;\n        let elementtype = element.dataset.type;\n        if (element.nodeName === \"OPTION\" && elementtype == 'item') {\n            let codearea = document.getElementsByClassName('tiny-stash-item-code');\n            let dropcode = \"[stashdrop secret=\\\"\" + element.dataset.hash + \"\\\" text=\\\"Pick up!\\\" image]\";\n            codearea[0].innerText = dropcode;\n            // window.console.log(codearea[0]);\n\n        }\n        if (element.nodeName === \"OPTION\" && elementtype == 'trade') {\n            let codearea = document.getElementsByClassName('tiny-stash-trade-code');\n            let dropcode = \"[stashtrade secret=\\\"\" + element.dataset.hash + \"\\\"]\";\n            codearea[0].innerText = dropcode;\n            // window.console.log(codearea[0]);\n\n        }\n\n        if (element.nodeName === \"BUTTON\" && element.dataset.action == 'save') {\n            // Need to check with tab has focus.\n            editor.execCommand('mceInsertContent', false, savedata.codearea);\n        }\n    });\n};\n\nconst getAllDropData = (contextid) => Ajax.call([{\n    methodname: 'block_stash_get_all_drops',\n    args: {contextid: contextid}\n}])[0];\n\n"],"names":["editor","displayDialogue","async","contextid","data","getAllDropData","modalPromises","ModalFactory","create","type","types","SAVE_CANCEL","body","Templates","render","large","show","$root","getRoot","root","savedata","on","ModalEvents","hidden","codearea","document","querySelector","getAttribute","getElementsByClassName","window","console","log","innerText","destroy","shown","addEventListener","event","element","target","elementtype","dataset","nodeName","dropcode","hash","action","execCommand","Ajax","call","methodname","args"],"mappings":";;;;;;;4SAiC6BA,SACzBC,gBAAgBD,eAQdC,gBAAkBC,MAAAA,aAChBC,WAAY,yBAAaH,QACzBI,WAAaC,eAAeF,iBAE1BG,oBAAsBC,uBAAaC,OAAO,CAC5CC,KAAMF,uBAAaG,MAAMC,YACzBC,KAAMC,mBAAUC,OAAO,gCAAiCV,MACxDW,OAAO,IAGXT,cAAcU,aACRC,YAAcX,cAAcY,UAC5BC,KAAOF,MAAM,OAEfG,SAAW,GAEfH,MAAMI,GAAGC,sBAAYC,QAAQ,SAErBC,SAAW,GAEXA,SAD2C,SAF/BC,SAASC,cAAc,2CAEzBC,aAAa,iBACZF,SAASG,uBAAuB,wBAEhCH,SAASG,uBAAuB,yBAE/CC,OAAOC,QAAQC,IAAIP,SAAS,IAC5BJ,SAASI,SAAWA,SAAS,GAAGQ,UAChC1B,cAAc2B,aAGlBhB,MAAMI,GAAGC,sBAAYY,OAAO,SAI5Bf,KAAKgB,iBAAiB,SAAUC,YACxBC,QAAUD,MAAME,OAChBC,YAAcF,QAAQG,QAAQ/B,QACT,WAArB4B,QAAQI,UAAwC,QAAfF,YAAuB,KACpDf,SAAWC,SAASG,uBAAuB,wBAC3Cc,SAAW,sBAAyBL,QAAQG,QAAQG,KAAO,2BAC/DnB,SAAS,GAAGQ,UAAYU,YAIH,WAArBL,QAAQI,UAAwC,SAAfF,YAAwB,KACrDf,SAAWC,SAASG,uBAAuB,yBAC3Cc,SAAW,uBAA0BL,QAAQG,QAAQG,KAAO,KAChEnB,SAAS,GAAGQ,UAAYU,SAKH,WAArBL,QAAQI,UAAmD,QAA1BJ,QAAQG,QAAQI,QAEjD5C,OAAO6C,YAAY,oBAAoB,EAAOzB,SAASI,cAK7DnB,eAAkBF,WAAc2C,cAAKC,KAAK,CAAC,CAC7CC,WAAY,4BACZC,KAAM,CAAC9C,UAAWA,cAClB"}