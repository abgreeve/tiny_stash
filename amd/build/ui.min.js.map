{"version":3,"file":"ui.min.js","sources":["../src/ui.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny stash UI.\n *\n * @module      tiny_stash/ui\n * @copyright   2023 Adrian Greeve <adriangreeve.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Templates from 'core/templates';\nimport {getContextId} from 'editor_tiny/options';\nimport {getCourseId} from 'tiny_stash/options';\nimport $ from 'jquery';\nimport * as DropAdd from 'tiny_stash/drop-add';\nimport * as AddItem from 'tiny_stash/additem';\nimport * as AddTrade from 'tiny_stash/addtrade';\nimport SnippetMaker from 'tiny_stash/local/classes/snippetmaker';\nimport * as WebService from 'tiny_stash/webservice-calls';\nimport {get_string as getString} from 'core/str';\n\nlet itemsData = {};\nlet tradeData = {};\nlet Snippet = {};\n\n/**\n * Handle action\n * @param {TinyMCE} editor\n */\nexport const handleAction = (editor) => {\n    displayDialogue(editor);\n};\n\n/**\n * Display the drop dialogue.\n *\n * @param {TinyMCE} editor\n * @returns {Promise<void>}\n */\nconst displayDialogue = async(editor) => {\n    let contextid = getContextId(editor);\n    let data = await getDropData(contextid);\n    let courseid = getCourseId(editor);\n    await updateItems(courseid);\n    formatTradeInformation(data.trades, itemsData);\n\n    const modalPromises = await ModalFactory.create({\n        title: getString('modalheading', 'tiny_stash'),\n        type: ModalFactory.types.SAVE_CANCEL,\n        body: Templates.render('tiny_stash/drop-code-selector', data),\n        large: true,\n    });\n\n    modalPromises.show();\n    const $root = await modalPromises.getRoot();\n    const root = $root[0];\n\n    let savedata = {};\n\n    $root.on(ModalEvents.hidden, () => {\n        modalPromises.destroy();\n    });\n\n    $root.on(ModalEvents.bodyRendered, () => {\n        addDropListener(editor);\n\n        // Add a listener for the appearance select box.\n        addAppearanceListener();\n        addTextAndImageListener();\n\n        let additembuttons = document.querySelectorAll('.tiny-stash-add-item');\n        for (let additembutton of additembuttons) {\n            additembutton.addEventListener('click', (e) => {\n                e.preventDefault();\n                $('.carousel').carousel('next');\n                $('.carousel').carousel('pause');\n                let location = e.currentTarget.dataset.location;\n                AddItem.init(editor, location);\n            });\n        }\n\n        document.querySelector('.tiny-stash-add-trade').addEventListener('click', (e) => {\n            e.preventDefault();\n            $('.carousel').carousel(3);\n            $('.carousel').carousel('pause');\n            AddTrade.init(editor);\n        });\n\n        $('.carousel').on('slide.bs.carousel', async () => {\n            if (DropAdd.getStatus() == 'Saved') {\n                // window.console.log(DropAdd.SavedIndex);\n                // Reload the drop list.\n                data = await getDropData(contextid);\n                Templates.render('tiny_stash/drop-select', data).then((html, js) => {\n                    let selectnode = document.querySelector('.tiny-stash-drop-select');\n                    Templates.replaceNodeContents(selectnode, html, js);\n                    let selectitemnode = document.querySelector('.tiny-stash-item-select');\n                    for (let i=0; i< selectitemnode.options.length; i++) {\n                        let option = selectitemnode.options[i];\n                        if (option.dataset.hash == DropAdd.SavedIndex) {\n                            option.selected = true;\n                            setPreview(option.dataset.id, option.dataset.hash);\n                        }\n                    }\n                    addDropListener(editor);\n                });\n                DropAdd.setStatus('Clear');\n            }\n            if (AddItem.getStatus() == 'Saved') {\n                // Reload the drop list.\n                updateItems(courseid);\n                AddItem.setStatus('Clear');\n            }\n\n            if (AddTrade.getStatus() == 'Saved') {\n                // Reload the trade select element.\n                await updateItems(courseid);\n                data = await getDropData(contextid);\n                formatTradeInformation(data.trades, itemsData);\n                window.console.log(data);\n                Templates.render('tiny_stash/local/selectors/trade-drop-selector', data).then((html, js) => {\n                    let selectnode = document.querySelector('.tiny-stash-trade-select');\n                    Templates.replaceNodeContents(selectnode, html, js);\n                    let selectitemnode = document.querySelector('.tiny-stash-trade-selector');\n                    for (let i=0; i< selectitemnode.options.length; i++) {\n                        let option = selectitemnode.options[i];\n                        if (option.dataset.hash == AddTrade.TradeHash) {\n                            option.selected = true;\n                            let codearea = document.getElementsByClassName('tiny-stash-trade-code');\n                            let dropcode = \"[stashtrade secret=\\\"\" + option.dataset.hash + \"\\\"]\";\n                            codearea[0].innerText = dropcode;\n                            setTradePreview(option.dataset.hash);\n                        }\n                    }\n                });\n                AddTrade.setStatus('ready');\n            }\n        });\n    });\n\n    $root.on(ModalEvents.save, () => {\n        let activetab = document.querySelector('[aria-selected=\"true\"][data-tiny-stash]');\n        let codearea = '';\n        if (activetab.getAttribute('aria-controls') == 'items') {\n            codearea = document.getElementsByClassName('tiny-stash-item-code');\n        } else {\n            codearea = document.getElementsByClassName('tiny-stash-trade-code');\n        }\n        savedata.codearea = codearea[0].innerText;\n        editor.execCommand('mceInsertContent', false, savedata.codearea);\n    });\n\n    root.addEventListener('click', (event) => {\n        let element = event.target;\n        let elementtype = element.dataset.type;\n        if (element.nodeName === \"OPTION\" && elementtype == 'item') {\n            setPreview(element.dataset.id, element.dataset.hash);\n        }\n        if (element.nodeName === \"OPTION\" && elementtype == 'trade') {\n            let codearea = document.getElementsByClassName('tiny-stash-trade-code');\n            let dropcode = \"[stashtrade secret=\\\"\" + element.dataset.hash + \"\\\"]\";\n            codearea[0].innerText = dropcode;\n            setTradePreview(element.dataset.hash);\n        }\n    });\n};\n\nconst updateItems = async (courseid) => {\n    itemsData = {};\n    let itemdata = await getItemData(courseid);\n    if (itemdata.items) {\n        itemdata.items.forEach((item) => {\n            itemsData[item.id] = item;\n        });\n    }\n};\n\nconst addDropListener = (editor) => {\n    let temp = document.getElementsByClassName('tiny-stash-add-drop');\n    temp[0].addEventListener('click', (e) => {\n        e.preventDefault();\n        $('.carousel').carousel(2);\n        $('.carousel').carousel('pause');\n        // init drop add page.\n        DropAdd.init(itemsData, editor);\n    });\n};\n\nconst addAppearanceListener = () => {\n    let selectnode = document.querySelector('.tiny-stash-appearance');\n    selectnode.addEventListener('change', (e) => {\n        let selectedelement = e.target.selectedOptions[0];\n        if (selectedelement.value == 'text') {\n            document.querySelector('.snippet-label').classList.remove('d-none');\n            document.querySelector('.snippet-actiontext').classList.add('d-none');\n        }\n        if (selectedelement.value == 'image') {\n            document.querySelector('.snippet-label').classList.add('d-none');\n            document.querySelector('.snippet-actiontext').classList.add('d-none');\n        }\n        if (selectedelement.value == 'imageandbutton') {\n            document.querySelector('.snippet-label').classList.add('d-none');\n            document.querySelector('.snippet-actiontext').classList.remove('d-none');\n        }\n\n        let itemselect = document.querySelector('.tiny-stash-item-select').selectedOptions[0];\n        setPreview(itemselect.dataset.id, itemselect.dataset.hash);\n    });\n};\n\nconst addTextAndImageListener = () => {\n    let textnode = document.querySelector('input[name=\"actiontext\"]');\n\n    textnode.addEventListener('keyup', (e) => {\n        // if no preview exit early.\n        if (!document.querySelector('.block-stash-item')) {\n            return;\n        }\n        let buttontext = e.currentTarget.value;\n        let previewbutton = document.querySelector('.tiny-stash-button-preview');\n        previewbutton.innerText = buttontext;\n        // Update the snippet text.\n        let codearea = document.getElementsByClassName('tiny-stash-item-code');\n        Snippet.setText(buttontext);\n        codearea[0].innerText = Snippet.getImageAndText();\n    });\n\n    let labelnode = document.querySelector('input[name=\"label\"]');\n\n    labelnode.addEventListener('keyup', () => {\n        // if no preview exit early.\n        if (!document.querySelector('.block-stash-item')) {\n            return;\n        }\n        let itemnode = document.querySelector('.tiny-stash-item-select');\n        setPreview(itemnode.selectedOptions[0].dataset.id, itemnode.selectedOptions[0].dataset.hash);\n    });\n\n};\n\nconst setPreview = (itemid, hashcode) => {\n    // Check the appearance to determine what to display and update.\n    let appearanceselector = document.querySelector('.tiny-stash-appearance');\n    let codearea = document.getElementsByClassName('tiny-stash-item-code');\n    let buttontext = '';\n    if (appearanceselector.value === 'text') {\n        buttontext = document.querySelector('input[name=\"label\"]').value;\n    } else {\n        buttontext = document.querySelector('input[name=\"actiontext\"]').value;\n    }\n    Snippet = new SnippetMaker(hashcode, itemsData[itemid].name);\n    Snippet.setText(buttontext);\n\n    updatePreview(itemid, appearanceselector.value);\n    if (appearanceselector.value === 'imageandbutton') {\n        codearea[0].innerText = Snippet.getImageAndText();\n    } else if (appearanceselector.value === 'image') {\n        codearea[0].innerText = Snippet.getImage();\n    } else {\n        codearea[0].innerText = Snippet.getText();\n    }\n\n};\n\n/**\n * Update the preview image.\n *\n * @param {int} itemid\n * @param {string} previewtype\n */\nconst updatePreview = (itemid, previewtype) => {\n    let previewnode = document.querySelector('.preview');\n    previewnode.children.forEach((child) => { previewnode.removeChild(child); });\n\n    let wrappingdiv = document.createElement('div');\n    wrappingdiv.classList.add('block-stash-item');\n\n    if (previewtype === 'text') {\n        let textanchour = document.createElement('a');\n        textanchour.setAttribute('href', '#');\n        textanchour.innerText = document.querySelector('input[name=\"label\"]').value;\n        wrappingdiv.appendChild(textanchour);\n    } else {\n        // Image and text\n        let imagediv = document.createElement('div');\n        imagediv.classList.add('item-image');\n        imagediv.style.backgroundImage = 'url(' + itemsData[itemid].imageurl + ')';\n        if (previewtype === 'imageandbutton') {\n            let buttondiv = document.createElement('div');\n            buttondiv.classList.add('item-action');\n            let button = document.createElement('button');\n            button.classList.add('btn', 'btn-secondary', 'tiny-stash-button-preview');\n            button.setAttribute('disabled', true);\n            let temp = document.querySelector('input[name=\"actiontext\"]');\n            button.innerHTML = temp.value;\n            buttondiv.appendChild(button);\n            wrappingdiv.appendChild(imagediv);\n            wrappingdiv.appendChild(buttondiv);\n        } else {\n            wrappingdiv.appendChild(imagediv);\n        }\n    }\n    previewnode.appendChild(wrappingdiv);\n};\n\nconst formatTradeInformation = (tradedata, itemdata) => {\n    let data = {};\n    for (let tradedatum of tradedata) {\n        data[tradedatum.tradeid] = {\n            'tradeid': tradedatum.tradeid,\n            'name': tradedatum.name,\n            'gaintitle': tradedatum.gaintitle,\n            'losstitle': tradedatum.losstitle,\n            'hashcode': tradedatum.hashcode,\n            'additems': [],\n            'lossitems': []\n        };\n\n        for (let gainitem of tradedatum.additems) {\n            if (gainitem) {\n                data[tradedatum.tradeid].additems.push({\n                    'itemid': gainitem.itemid,\n                    'quantity': gainitem.quantity,\n                    'name': itemdata[gainitem.itemid].name,\n                    'imageurl': itemdata[gainitem.itemid].imageurl\n                });\n            }\n        }\n\n        for (let lossitem of tradedatum.lossitems) {\n            if (lossitem) {\n                data[tradedatum.tradeid].lossitems.push({\n                    'itemid': lossitem.itemid,\n                    'quantity': lossitem.quantity,\n                    'name': itemdata[lossitem.itemid].name,\n                    'imageurl': itemdata[lossitem.itemid].imageurl\n                });\n            }\n        }\n    }\n    tradeData = data;\n    // window.console.log(data);\n};\n\nconst setTradePreview = (hashcode) => {\n    // window.console.log(tradeData);\n    let selecteditem = {};\n    for (let tradeinfo of Object.entries(tradeData)) {\n        if (tradeinfo[1].hashcode == hashcode) {\n            selecteditem = tradeinfo[1];\n            break;\n        }\n    }\n    let tradepreviewnode = document.querySelector('.tiny-stash-trade-preview');\n    AddItem.removeChildren(tradepreviewnode);\n    Templates.render('tiny_stash/trade-preview', selecteditem).then((html, js) => {\n        Templates.replaceNodeContents(tradepreviewnode, html, js);\n    });\n    window.console.log(selecteditem);\n};\n\nconst getDropData = async (contextid) => {\n    try {\n        let temp = await WebService.getAllDropData(contextid);\n        return temp;\n    } catch (e) {\n        return {};\n    }\n};\n\nconst getItemData = async (courseid) => {\n    try {\n        let temp = await WebService.getAllItemData(courseid);\n        return temp;\n    } catch (e) {\n        return {};\n    }\n};\n"],"names":["itemsData","tradeData","Snippet","editor","displayDialogue","async","contextid","data","getDropData","courseid","updateItems","formatTradeInformation","trades","modalPromises","ModalFactory","create","title","type","types","SAVE_CANCEL","body","Templates","render","large","show","$root","getRoot","root","savedata","on","ModalEvents","hidden","destroy","bodyRendered","addDropListener","addAppearanceListener","addTextAndImageListener","additembuttons","document","querySelectorAll","additembutton","addEventListener","e","preventDefault","carousel","location","currentTarget","dataset","AddItem","init","querySelector","AddTrade","DropAdd","getStatus","then","html","js","selectnode","replaceNodeContents","selectitemnode","i","options","length","option","hash","SavedIndex","selected","setPreview","id","setStatus","window","console","log","TradeHash","codearea","getElementsByClassName","dropcode","innerText","setTradePreview","save","getAttribute","execCommand","event","element","target","elementtype","nodeName","itemdata","getItemData","items","forEach","item","selectedelement","selectedOptions","value","classList","remove","add","itemselect","buttontext","setText","getImageAndText","itemnode","itemid","hashcode","appearanceselector","SnippetMaker","name","updatePreview","getImage","getText","previewtype","previewnode","children","child","removeChild","wrappingdiv","createElement","textanchour","setAttribute","appendChild","imagediv","style","backgroundImage","imageurl","buttondiv","button","temp","innerHTML","tradedata","tradedatum","tradeid","gaintitle","losstitle","gainitem","additems","push","quantity","lossitem","lossitems","selecteditem","tradeinfo","Object","entries","tradepreviewnode","removeChildren","WebService","getAllDropData","getAllItemData"],"mappings":"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"}