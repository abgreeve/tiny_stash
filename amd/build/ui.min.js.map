{"version":3,"file":"ui.min.js","sources":["../src/ui.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny stash UI.\n *\n * @module      tiny_stash/ui\n * @copyright   2023 Adrian Greeve <adriangreeve.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Templates from 'core/templates';\nimport {getContextId} from 'editor_tiny/options';\nimport {getCourseId} from 'tiny_stash/options';\nimport $ from 'jquery';\nimport * as DropAdd from 'tiny_stash/drop-add';\nimport * as AddItem from 'tiny_stash/additem';\nimport * as AddTrade from 'tiny_stash/addtrade';\nimport * as Help from 'tiny_stash/helptabs';\nimport SnippetMaker from 'tiny_stash/local/classes/snippetmaker';\nimport * as WebService from 'tiny_stash/webservice-calls';\nimport {get_string as getString} from 'core/str';\n\nlet itemsData = {};\nlet tradeData = {};\nlet Snippet = {};\n\n/**\n * Handle action\n * @param {TinyMCE} editor\n */\nexport const handleAction = (editor) => {\n    displayDialogue(editor);\n};\n\n/**\n * Display the drop dialogue.\n *\n * @param {TinyMCE} editor\n * @returns {Promise<void>}\n */\nconst displayDialogue = async(editor) => {\n    let contextid = getContextId(editor);\n    let data = await getDropData(contextid);\n    let courseid = getCourseId(editor);\n    await updateItems(courseid);\n    formatTradeInformation(data.trades, itemsData);\n\n    if (Object.keys(itemsData).length == 0) {\n        data.itemempty = true;\n    } else if (data.items.length == 0) {\n        data.dropempty = true;\n    } else {\n        data.normal = true;\n    }\n\n    const modalPromises = await ModalFactory.create({\n        title: getString('modalheading', 'tiny_stash'),\n        type: ModalFactory.types.SAVE_CANCEL,\n        body: Templates.render('tiny_stash/drop-code-selector', data),\n        large: true,\n    });\n\n    modalPromises.show();\n    const $root = await modalPromises.getRoot();\n    const root = $root[0];\n\n    let savedata = {};\n\n    $root.on(ModalEvents.hidden, () => {\n        modalPromises.destroy();\n    });\n\n    $root.on(ModalEvents.bodyRendered, () => {\n        Help.init();\n        addTabListeners();\n        addDropListener(editor);\n\n        // Add a listener for the appearance select box.\n        if (data.normal) {\n            addAppearanceListener();\n            addTextAndImageListener();\n        }\n\n        let additembuttons = document.querySelectorAll('.tiny-stash-add-item');\n        for (let additembutton of additembuttons) {\n            additembutton.addEventListener('click', (e) => {\n                e.preventDefault();\n                $('.carousel').carousel('next');\n                $('.carousel').carousel('pause');\n                let location = e.currentTarget.dataset.location;\n                AddItem.init(editor, location);\n            });\n        }\n\n        document.querySelector('.tiny-stash-add-trade').addEventListener('click', (e) => {\n            e.preventDefault();\n            $('.carousel').carousel(3);\n            $('.carousel').carousel('pause');\n            AddTrade.init(editor);\n        });\n\n        $('.carousel').on('slide.bs.carousel', async () => {\n            if (DropAdd.getStatus() == 'Saved') {\n                // Reload the drop list.\n                data = await getDropData(contextid);\n                const zerostatenode = document.querySelector('.tiny-stash-zero-state');\n                if (zerostatenode) {\n                    // We now have a location we can add the drop form.\n                    Templates.render('tiny_stash/local/tabs/drop-form', data).then((html, js) => {\n                        const parentnode = zerostatenode.parentNode;\n                        parentnode.removeChild(zerostatenode);\n                        Templates.appendNodeContents(parentnode, html, js);\n                        // Add back the listeners for the drop form.\n                        addAppearanceListener();\n                    });\n                }\n\n                Templates.render('tiny_stash/drop-select', data).then((html, js) => {\n                    let selectnode = document.querySelector('.tiny-stash-drop-select');\n                    Templates.replaceNodeContents(selectnode, html, js);\n                    let selectitemnode = document.querySelector('.tiny-stash-item-select');\n                    for (let i=0; i< selectitemnode.options.length; i++) {\n                        let option = selectitemnode.options[i];\n                        if (option.dataset.hash == DropAdd.SavedIndex) {\n                            option.selected = true;\n                            setPreview(option.dataset.id, option.dataset.hash);\n                        }\n                    }\n                });\n                DropAdd.setStatus('Clear');\n            }\n            if (AddItem.getStatus() == 'Saved') {\n                if (data.itemempty) {\n                    if (data.items.length == 0) {\n                        data.dropempty = true;\n                        // Add the message about creating a location.\n                        const contentnode = document.querySelector('.tiny-stash-zero-state');\n                        AddItem.removeChildren(contentnode);\n                        const messagenode = document.createElement('p');\n                        messagenode.innerText = await getString('nolocations', 'tiny_stash');\n                        contentnode.appendChild(messagenode);\n                        // enable the location button.\n                        document.querySelector('.tiny-stash-add-drop').attributes.removeNamedItem('disabled');\n                    }\n                    data.itemempty = false;\n                }\n                // Reload the drop list.\n                updateItems(courseid);\n                // To be set in the hid section\n                AddItem.setStatus('Clear');\n            }\n\n            if (AddTrade.getStatus() == 'Saved') {\n                // Reload the trade select element.\n                await updateItems(courseid);\n                data = await getDropData(contextid);\n                formatTradeInformation(data.trades, itemsData);\n                Templates.render('tiny_stash/local/selectors/trade-drop-selector', data).then((html, js) => {\n                    let selectnode = document.querySelector('.tiny-stash-trade-select');\n                    Templates.replaceNodeContents(selectnode, html, js);\n                    let selectitemnode = document.querySelector('.tiny-stash-trade-selector');\n                    for (let i=0; i< selectitemnode.options.length; i++) {\n                        let option = selectitemnode.options[i];\n                        if (option.dataset.hash == AddTrade.TradeHash) {\n                            option.selected = true;\n                            let codearea = document.getElementsByClassName('tiny-stash-trade-code');\n                            let dropcode = \"[stashtrade secret=\\\"\" + option.dataset.hash + \"\\\"]\";\n                            codearea[0].innerText = dropcode;\n                            setTradePreview(option.dataset.hash);\n                        }\n                    }\n                });\n                AddTrade.setStatus('ready');\n            }\n        });\n    });\n\n    $root.on(ModalEvents.save, () => {\n        let activetab = document.querySelector('[aria-selected=\"true\"][data-tiny-stash]');\n        let codearea = '';\n        if (activetab.getAttribute('aria-controls') == 'items') {\n            codearea = document.getElementsByClassName('tiny-stash-item-code');\n        } else {\n            codearea = document.getElementsByClassName('tiny-stash-trade-code');\n        }\n        savedata.codearea = codearea[0].innerText;\n        editor.execCommand('mceInsertContent', false, savedata.codearea);\n    });\n\n    root.addEventListener('click', (event) => {\n        let element = event.target;\n        let elementtype = element.dataset.type;\n        if (element.nodeName === \"OPTION\" && elementtype == 'item') {\n            setPreview(element.dataset.id, element.dataset.hash);\n        }\n        if (element.nodeName === \"OPTION\" && elementtype == 'trade') {\n            let codearea = document.getElementsByClassName('tiny-stash-trade-code');\n            let dropcode = \"[stashtrade secret=\\\"\" + element.dataset.hash + \"\\\"]\";\n            codearea[0].innerText = dropcode;\n            setTradePreview(element.dataset.hash);\n        }\n    });\n};\n\nconst updateItems = async (courseid) => {\n    itemsData = {};\n    let itemdata = await getItemData(courseid);\n    if (itemdata.items) {\n        itemdata.items.forEach((item) => {\n            itemsData[item.id] = item;\n        });\n    }\n};\n\nconst addTabListeners = () => {\n    const tabnodes = document.querySelectorAll('.tiny-stash-tabs');\n    tabnodes.forEach((tabnode) => {\n        tabnode.addEventListener('click', (e) => {\n            const tabname = e.currentTarget.children[0].attributes['id'].value;\n            if (tabname == 'help-tab') {\n                return;\n            }\n            const savenode = document.querySelector('button[data-action=\"save\"]');\n            if (!savenode) {\n                Templates.render('tiny_stash/local/footers/main-footer', {}).then((html, js) => {\n                    let modalfooter = document.querySelector('.modal-footer');\n                    // Remove existing buttons.\n                    AddItem.removeChildren(modalfooter);\n                    Templates.appendNodeContents(modalfooter, html, js);\n                });\n            }\n        });\n    });\n};\n\nconst addDropListener = (editor) => {\n    let temp = document.getElementsByClassName('tiny-stash-add-drop');\n    temp[0].addEventListener('click', (e) => {\n        e.preventDefault();\n        $('.carousel').carousel(2);\n        $('.carousel').carousel('pause');\n        // init drop add page.\n        DropAdd.init(itemsData, editor);\n    });\n};\n\nconst addAppearanceListener = () => {\n    let selectnode = document.querySelector('.tiny-stash-appearance');\n    selectnode.addEventListener('change', (e) => {\n        let selectedelement = e.target.selectedOptions[0];\n        if (selectedelement.value == 'text') {\n            document.querySelector('.snippet-label').classList.remove('d-none');\n            document.querySelector('.snippet-actiontext').classList.add('d-none');\n        }\n        if (selectedelement.value == 'image') {\n            document.querySelector('.snippet-label').classList.add('d-none');\n            document.querySelector('.snippet-actiontext').classList.add('d-none');\n        }\n        if (selectedelement.value == 'imageandbutton') {\n            document.querySelector('.snippet-label').classList.add('d-none');\n            document.querySelector('.snippet-actiontext').classList.remove('d-none');\n        }\n\n        let itemselect = document.querySelector('.tiny-stash-item-select').selectedOptions[0];\n        setPreview(itemselect.dataset.id, itemselect.dataset.hash);\n    });\n};\n\nconst addTextAndImageListener = () => {\n    let textnode = document.querySelector('input[name=\"actiontext\"]');\n\n    textnode.addEventListener('keyup', (e) => {\n        // if no preview exit early.\n        if (!document.querySelector('.block-stash-item')) {\n            return;\n        }\n        let buttontext = e.currentTarget.value;\n        let previewbutton = document.querySelector('.tiny-stash-button-preview');\n        previewbutton.innerText = buttontext;\n        // Update the snippet text.\n        let codearea = document.getElementsByClassName('tiny-stash-item-code');\n        Snippet.setText(buttontext);\n        codearea[0].innerText = Snippet.getImageAndText();\n    });\n\n    let labelnode = document.querySelector('input[name=\"label\"]');\n\n    labelnode.addEventListener('keyup', () => {\n        // if no preview exit early.\n        if (!document.querySelector('.block-stash-item')) {\n            return;\n        }\n        let itemnode = document.querySelector('.tiny-stash-item-select');\n        setPreview(itemnode.selectedOptions[0].dataset.id, itemnode.selectedOptions[0].dataset.hash);\n    });\n\n};\n\nconst setPreview = (itemid, hashcode) => {\n    // Check the appearance to determine what to display and update.\n    let appearanceselector = document.querySelector('.tiny-stash-appearance');\n    let codearea = document.getElementsByClassName('tiny-stash-item-code');\n    let buttontext = '';\n    if (appearanceselector.value === 'text') {\n        buttontext = document.querySelector('input[name=\"label\"]').value;\n    } else {\n        buttontext = document.querySelector('input[name=\"actiontext\"]').value;\n    }\n    Snippet = new SnippetMaker(hashcode, itemsData[itemid].name);\n    Snippet.setText(buttontext);\n\n    updatePreview(itemid, appearanceselector.value);\n    if (appearanceselector.value === 'imageandbutton') {\n        codearea[0].innerText = Snippet.getImageAndText();\n    } else if (appearanceselector.value === 'image') {\n        codearea[0].innerText = Snippet.getImage();\n    } else {\n        codearea[0].innerText = Snippet.getText();\n    }\n\n};\n\n/**\n * Update the preview image.\n *\n * @param {int} itemid\n * @param {string} previewtype\n */\nconst updatePreview = (itemid, previewtype) => {\n    let previewnode = document.querySelector('.preview');\n    previewnode.children.forEach((child) => { previewnode.removeChild(child); });\n\n    let wrappingdiv = document.createElement('div');\n    wrappingdiv.classList.add('block-stash-item');\n\n    if (previewtype === 'text') {\n        let textanchour = document.createElement('a');\n        textanchour.setAttribute('href', '#');\n        textanchour.innerText = document.querySelector('input[name=\"label\"]').value;\n        wrappingdiv.appendChild(textanchour);\n    } else {\n        // Image and text\n        let imagediv = document.createElement('div');\n        imagediv.classList.add('item-image');\n        imagediv.style.backgroundImage = 'url(' + itemsData[itemid].imageurl + ')';\n        if (previewtype === 'imageandbutton') {\n            let buttondiv = document.createElement('div');\n            buttondiv.classList.add('item-action');\n            let button = document.createElement('button');\n            button.classList.add('btn', 'btn-secondary', 'tiny-stash-button-preview');\n            button.setAttribute('disabled', true);\n            let temp = document.querySelector('input[name=\"actiontext\"]');\n            button.innerHTML = temp.value;\n            buttondiv.appendChild(button);\n            wrappingdiv.appendChild(imagediv);\n            wrappingdiv.appendChild(buttondiv);\n        } else {\n            wrappingdiv.appendChild(imagediv);\n        }\n    }\n    previewnode.appendChild(wrappingdiv);\n};\n\nconst formatTradeInformation = (tradedata, itemdata) => {\n    let data = {};\n    for (let tradedatum of tradedata) {\n        data[tradedatum.tradeid] = {\n            'tradeid': tradedatum.tradeid,\n            'name': tradedatum.name,\n            'gaintitle': tradedatum.gaintitle,\n            'losstitle': tradedatum.losstitle,\n            'hashcode': tradedatum.hashcode,\n            'additems': [],\n            'lossitems': []\n        };\n\n        for (let gainitem of tradedatum.additems) {\n            if (gainitem) {\n                data[tradedatum.tradeid].additems.push({\n                    'itemid': gainitem.itemid,\n                    'quantity': gainitem.quantity,\n                    'name': itemdata[gainitem.itemid].name,\n                    'imageurl': itemdata[gainitem.itemid].imageurl\n                });\n            }\n        }\n\n        for (let lossitem of tradedatum.lossitems) {\n            if (lossitem) {\n                data[tradedatum.tradeid].lossitems.push({\n                    'itemid': lossitem.itemid,\n                    'quantity': lossitem.quantity,\n                    'name': itemdata[lossitem.itemid].name,\n                    'imageurl': itemdata[lossitem.itemid].imageurl\n                });\n            }\n        }\n    }\n    tradeData = data;\n};\n\nconst setTradePreview = (hashcode) => {\n    let selecteditem = {};\n    for (let tradeinfo of Object.entries(tradeData)) {\n        if (tradeinfo[1].hashcode == hashcode) {\n            selecteditem = tradeinfo[1];\n            break;\n        }\n    }\n    let tradepreviewnode = document.querySelector('.tiny-stash-trade-preview');\n    AddItem.removeChildren(tradepreviewnode);\n    Templates.render('tiny_stash/trade-preview', selecteditem).then((html, js) => {\n        Templates.replaceNodeContents(tradepreviewnode, html, js);\n    });\n};\n\nconst getDropData = async (contextid) => {\n    try {\n        let temp = await WebService.getAllDropData(contextid);\n        return temp;\n    } catch (e) {\n        return {};\n    }\n};\n\nconst getItemData = async (courseid) => {\n    try {\n        let temp = await WebService.getAllItemData(courseid);\n        return temp;\n    } catch (e) {\n        return {};\n    }\n};\n"],"names":["itemsData","tradeData","Snippet","editor","displayDialogue","async","contextid","data","getDropData","courseid","updateItems","formatTradeInformation","trades","Object","keys","length","itemempty","items","dropempty","normal","modalPromises","ModalFactory","create","title","type","types","SAVE_CANCEL","body","Templates","render","large","show","$root","getRoot","root","savedata","on","ModalEvents","hidden","destroy","bodyRendered","Help","init","addTabListeners","addDropListener","addAppearanceListener","addTextAndImageListener","additembuttons","document","querySelectorAll","additembutton","addEventListener","e","preventDefault","carousel","location","currentTarget","dataset","AddItem","querySelector","AddTrade","DropAdd","getStatus","zerostatenode","then","html","js","parentnode","parentNode","removeChild","appendNodeContents","selectnode","replaceNodeContents","selectitemnode","i","options","option","hash","SavedIndex","selected","setPreview","id","setStatus","contentnode","removeChildren","messagenode","createElement","innerText","appendChild","attributes","removeNamedItem","TradeHash","codearea","getElementsByClassName","dropcode","setTradePreview","save","getAttribute","execCommand","event","element","target","elementtype","nodeName","itemdata","getItemData","forEach","item","tabnode","children","value","modalfooter","selectedelement","selectedOptions","classList","remove","add","itemselect","buttontext","setText","getImageAndText","itemnode","itemid","hashcode","appearanceselector","SnippetMaker","name","updatePreview","getImage","getText","previewtype","previewnode","child","wrappingdiv","textanchour","setAttribute","imagediv","style","backgroundImage","imageurl","buttondiv","button","temp","innerHTML","tradedata","tradedatum","tradeid","gaintitle","losstitle","gainitem","additems","push","quantity","lossitem","lossitems","selecteditem","tradeinfo","entries","tradepreviewnode","WebService","getAllDropData","getAllItemData"],"mappings":"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"}