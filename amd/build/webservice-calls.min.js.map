{"version":3,"file":"webservice-calls.min.js","sources":["../src/webservice-calls.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * All Ajax calls to web services\n *\n * @copyright  2023 Adrian Greeve <adriangreeve.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\n\n/**\n * Get all drop data.\n *\n * @param {int} contextid - The context id.\n * @returns {Promise<void>}\n */\nexport const getAllDropData = (contextid) => Ajax.call([{\n    methodname: 'block_stash_get_all_drops',\n    args: {contextid: contextid}\n}])[0];\n\n/**\n * Get all item data.\n *\n * @param {int} courseid - The course id.\n * @returns {Promise<void>}\n */\nexport const getAllItemData = (courseid) => Ajax.call([{\n    methodname: 'block_stash_get_items',\n    args: {courseid: courseid}\n}])[0];\n\nexport const createItem = (courseid, itemdata) => Ajax.call([{\n    methodname: 'block_stash_add_item',\n    args: {\n        courseid: courseid,\n        itemname: itemdata.itemname,\n        scarceitem: itemdata.scarceitem,\n        amountlimit: itemdata.amountlimit,\n        itemimage: itemdata.itemimage,\n        description: itemdata.description,\n    }\n}])[0];\n\n/**\n * Create the drop.\n *\n * @param {number} courseid - The course id.\n * @param {object} dropdata - The data for the drop.\n */\nexport const createDrop = (courseid, dropdata) => Ajax.call([{\n    methodname: 'block_stash_add_drop',\n    args: {\n        courseid: courseid,\n        itemid: dropdata.itemid,\n        name: dropdata.location,\n        maxpickup: dropdata.supplies,\n        pickupinterval: dropdata.pickupinterval\n    }\n}])[0];\n\nexport const createTrade = (tradedata) => Ajax.call([{\n    methodname: 'block_stash_create_trade',\n    args: tradedata\n}])[0];\n"],"names":["contextid","Ajax","call","methodname","args","courseid","itemdata","itemname","scarceitem","amountlimit","itemimage","description","dropdata","itemid","name","location","maxpickup","supplies","pickupinterval","tradedata"],"mappings":";;;;;;6PA8B+BA,WAAcC,cAAKC,KAAK,CAAC,CACpDC,WAAY,4BACZC,KAAM,CAACJ,UAAWA,cAClB,2BAQ2BK,UAAaJ,cAAKC,KAAK,CAAC,CACnDC,WAAY,wBACZC,KAAM,CAACC,SAAUA,aACjB,uBAEsB,CAACA,SAAUC,WAAaL,cAAKC,KAAK,CAAC,CACzDC,WAAY,uBACZC,KAAM,CACFC,SAAUA,SACVE,SAAUD,SAASC,SACnBC,WAAYF,SAASE,WACrBC,YAAaH,SAASG,YACtBC,UAAWJ,SAASI,UACpBC,YAAaL,SAASK,gBAE1B,uBAQsB,CAACN,SAAUO,WAAaX,cAAKC,KAAK,CAAC,CACzDC,WAAY,uBACZC,KAAM,CACFC,SAAUA,SACVQ,OAAQD,SAASC,OACjBC,KAAMF,SAASG,SACfC,UAAWJ,SAASK,SACpBC,eAAgBN,SAASM,mBAE7B,wBAEwBC,WAAclB,cAAKC,KAAK,CAAC,CACjDC,WAAY,2BACZC,KAAMe,aACN"}